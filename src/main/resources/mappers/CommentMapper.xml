<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.security.board.dao.CommentDao">

    <!-- List<CommentVO> getComments(); -->
    <select id="getComments" parameterType="int" resultType="com.example.security.board.vo.CommentVO">
        SELECT
            C.*
        ,   M.MEMBER_NM
        FROM
            COMMENTS C
        JOIN MEMBERS M ON C.USER_NO = M.MEMBER_NO
        WHERE
            C.DELETE_AT = 'N'
        AND
            C.POST_NO = #{id}
    </select>

    <!-- void addComment(CommentVO commentForm); -->
    <insert id="addComment" parameterType="com.example.security.board.vo.CommentVO">
        INSERT INTO COMMENTS
        (POST_NO, USER_NO, COMMENT_TEXT, DELETE_AT)
        VALUES
        (#{postNo},#{userNo},#{commentText},'N')
    </insert>

    <!-- void updateComment(CommentVO commentForm); -->
    <update id="updateComment" parameterType="com.example.security.board.vo.CommentVO">
        UPDATE
            COMMENTS
        SET
            COMMENT_TEXT = #{commentText} , UPDATED_DATE = NOW()
        WHERE
            POST_NO = #{postNo}
        AND
            COMMENT_NO = #{commentNo}
        AND
            USER_NO = #{userNo}
    </update>

    <!-- void deleteComment(CommentVO commentVO); -->
    <update id="deleteComment" parameterType="com.example.security.board.vo.CommentVO">
        UPDATE
            COMMENTS
        SET
            DELETE_AT = 'Y'
        WHERE
            POST_NO = #{postNo}
        AND
            COMMENT_NO = #{commentNo}
        AND
            USER_NO = #{userNo}
    </update>

    <!-- List<CommentVO> getCommentList(CommentDto commentDto); -->
    <select id="getCommentList" parameterType="com.example.security.board.dto.CommentDto" resultType="com.example.security.board.vo.CommentVO">
        SELECT
            *
        FROM
            (
                SELECT
                    C.COMMENT_NO
                    , C.POST_NO
                    , C.USER_NO
                    , C.COMMENT_TEXT
                    , C.CREATED_DATE
                    , C.UPDATED_DATE
                    , C.DELETE_AT
                    , C.PARENT_COMMENT_NO
                    , M.MEMBER_NM
                    , ROW_NUMBER() OVER (ORDER BY C.CREATED_DATE DESC, C.COMMENT_NO DESC) AS rn
                FROM
                    COMMENTS C
                JOIN MEMBERS M ON C.USER_NO = M.MEMBER_NO
                WHERE
                    C.DELETE_AT = 'N'
            ) AS COMMENTS
        WHERE rn BETWEEN #{begin} AND #{end}
    </select>

    <!-- int getTotalRows(CommentDto commentDto); -->
    <select id="getTotalRows" parameterType="com.example.security.board.dto.CommentDto" resultType="int">
        SELECT
            COUNT(*) as cnt
        FROM
            COMMENTS
        WHERE
            DELETE_AT = 'N'
        AND
            POST_NO = #{postNo}
    </select>

</mapper>